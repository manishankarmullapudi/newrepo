version: 0.2

env:
  secrets-manager:
    LOGIN: newsecrets:sonartoken
    HOST: newsecrets:HOST
    Organization: newsecrets:Organization
    Project: newsecrets:Project

phases:
  # Stage 1: Build
  build:
    commands:
      - echo "Build phase ..."
      # Add build commands here
      - sleep 5

  # Stage 2: Test (SonarQube)
  test:
    commands:
      - echo "Test phase (SonarQube) ..."
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - sh $pwd
      - unzip ./sonar-scanner-cli-4.7.0.2747-linux.zip
      - export PATH=$PATH:./sonar-scanner-4.7.0.2747-linux/bin/
      - sonar-scanner -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ]; then $CODEBUILD_BUILD_SUCCEEDING -eq 0; fi

  # Stage 3: Deploy
  deploy:
    commands:
      - echo "Deploy phase ..."
      # Add deployment commands here

  # Stage 4: Dummy DAST Scan
  dummy_dast:
    commands:
      - echo "Dummy DAST scan phase ..."
      # Add dummy DAST scan commands here

  # Define other stages as needed

artifacts:
  type: 
  files:
    - index.html
    - appspec.yml
    - scripts/install_dependencies
    - scripts/start_server
